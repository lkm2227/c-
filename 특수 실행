#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>
#include <windows.h>
#include <time.h>

int choice;
// 화면을 지우고 커서를 맨 위로 이동시키는 함수
void clearScreen() {
    system("cls");
}

// 네모의 위치를 업데이트하고 화면을 새로 그리는 함수
void drawSquare(int position) {
    clearScreen();
    // 네모 출력
    for (int i = 0; i < position; i++) {
        printf(" ");
    }
    printf("■\n\n타이밍에 맞춰 'a'키를 눌러 공격하세요!\n");

    // 화살표 출력
    printf("        ↓\n");

}

// 게임 로직을 처리하는 함수
int updateGame(int* position, int* direction) {
    // 네모의 위치와 방향 조정
    *position += *direction;
    if (*position == 0 || *position == 20) {
        *direction *= -1;
    }

    // 키 입력 처리
    if (_kbhit()) {
        char ch = _getch();
        if (ch == 'a') {
            if (*position >= 8 && *position <= 12) {
                printf("Great!\n");
                return 1; // 성공
            }
            else {
                printf("Miss...\n");
                return 0; // 실패
            }
        }
    }
    return -1;
}

// 메인 게임 루프 함수
void gameLoop() {
    int position = 0; // 네모의 위치
    int direction = 1; // 네모의 이동 방향
    int result;

    while (1) {
        drawSquare(position);
        result = updateGame(&position, &direction);
        if (result != -1) {
            break; // 게임 종료
        }
        Sleep(100); // 0.1초 대기
    }
}

//특수적 공격 함수
void exgameLoop() {
    int position = 0; // 네모의 위치
    int direction = 1; // 네모의 이동 방향
    int result;
    int successCount = 0; // 성공 횟수

    while (1) {
        drawSquare(position);
        result = updateGame(&position, &direction);
        if (result == 1) {
            successCount++;
            if (successCount == 3) {
                printf("3번 성공했습니다! 적을 쓰러트렸습니다!\n");
                break;
            }
        }
        else if (result == 0) {
            successCount = 0; // 실패하면 성공 횟수 초기화
        }
        Sleep(100); // 0.1초 대기
    }
}

void print_slow(const char* str) {
    for (int i = 0; i < strlen(str); i++) {
        printf("%c", str[i]);
        fflush(stdout);
        Sleep(30);
    }
}

void print_slow2(const char* str, int speed) {
    for (int j = 0; j < strlen(str); j++) {
        printf("%c", str[j]);
        fflush(stdout);
        Sleep(speed);
    }
}

//터미널창 크기 변환해주는 함수
void set_console_size(int width, int height) {
    char command[100];
    sprintf(command, "mode con: cols=%d lines=%d", width, height);
    system(command);
}
//원하는 좌표에 글자 출력하는 함수
void print_at(int x, int y, const char* str) {
    COORD pos = { x, y };
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleCursorPosition(hConsole, pos);
    printf("%s", str);
}

// 좌표로 커서변경해주는 함수
void move_cursor(int x, int y) {
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    COORD pos = { (SHORT)x, (SHORT)y };
    SetConsoleCursorPosition(hConsole, pos);
}

//좌표에 천천히 출력
void print_slow_at(int x, int y, const char* str) {
    move_cursor(x, y);
    print_slow(str);
}

//텍스트 지워주는 함수
void clear_text() {
    system("cls");
}

void specials3() {

    clear_text();
    print_at(46, 24, " ____________________");
    print_at(46, 25, "|    ________        |");
    print_at(46, 26, "|   /        \\___    |");
    print_at(46, 27, "|  /   ｀Д´    \\   |");
    print_at(46, 28, "|  |              |  |");
    print_at(46, 29, "|  \\______________/  |");
    print_at(46, 30, "|____________________|");
    print_slow_at(15, 45, "당신은 길을 걷다 화가 나있는 이경민과 마주쳤다. ");
    print_slow_at(15, 46, "전투를 피할 수 없을 것 같다...");
    print_slow_at(15, 47, "연속으로 공격에 성공하면 이길 수 있을 것 같다.");
    print_slow_at(15, 48, "1. 싸운다.");
    Sleep(1000);
    scanf("%d", &choice);
    if (choice == 1) {
        exgameLoop();
    }
}

// 메인 함수
int main() {
    specials3();

    return 0;
}

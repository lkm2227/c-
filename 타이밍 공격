#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <termios.h>
#include <fcntl.h>

// 터미널 설정을 변경하여 비차단 입력을 감지하는 함수
int kbhit(void) {
    struct termios oldt, newt;
    int ch;
    int oldf;

    // 터미널 속성 저장 및 변경
    tcgetattr(STDIN_FILENO, &oldt);
    newt = oldt;
    newt.c_lflag &= ~(ICANON | ECHO);
    tcsetattr(STDIN_FILENO, TCSANOW, &newt);

    // 파일 상태 플래그 저장 및 변경
    oldf = fcntl(STDIN_FILENO, F_GETFL, 0);
    fcntl(STDIN_FILENO, F_SETFL, oldf | O_NONBLOCK);

    // 입력 확인
    ch = getchar();

    // 터미널 속성 및 파일 상태 플래그 복구
    tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
    fcntl(STDIN_FILENO, F_SETFL, oldf);

    if(ch != EOF) {
        ungetc(ch, stdin);
        return 1;
    }

    return 0;
}

// 화면을 지우고 커서를 맨 위로 이동시키는 함수
void clearScreen() {
    printf("\033[2J");
    printf("\033[%d;%dH", 0, 0);
}

// 네모의 위치를 업데이트하고 화면을 새로 그리는 함수
void drawSquare(int position, int score) {
    clearScreen();
    // 네모 출력
    for(int i = 0; i < position; i++) {
        printf(" ");
    }
    printf("■\n\nPress 'a' when the square is in the center!\n");

    // 화살표 출력
    printf("        ↓\n");

    // 점수 출력
    printf("Score: %d\n", score);
}

// 게임 로직을 처리하는 함수
void updateGame(int *position, int *direction, int *score) {
    // 네모의 위치와 방향 조정
    *position += *direction;
    if(*position == 0 || *position == 20) {
        *direction *= -1;
    }

    // 키 입력 처리
    if(kbhit()) {
        char ch = getchar();
        if(ch == 'a') {
            if(*position >= 8 && *position <= 12) {
                printf("Great!\n");
                (*score)++;
            } else {
                printf("Miss...\n");
            }
            printf("Score: %d\n", *score);
            sleep(1);
        }
    }
}

// 메인 게임 루프 함수
void gameLoop() {
    int position = 0; // 네모의 위치
    int direction = 1; // 네모의 이동 방향
    int score = 0; // 점수

    while(1) {
        drawSquare(position, score);
        updateGame(&position, &direction, &score);
        usleep(100000); // 0.1초 대기
    }
}

// 메인 함수
int main() {
    gameLoop();
    return 0;
}
